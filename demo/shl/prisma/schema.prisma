// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Shl {
  id        String   @id @default(cuid(2))
  entropy   String   @unique // Extracted from manifest URL for efficient lookups
  payload   Json     // JSON serialized SHLink payload
  createdAt DateTime @default(now())

  // Relations
  manifest   Manifest?
  passcode   Passcode?
  recipients Recipient[]

  @@map("shls")
}

model Manifest {
  id        Int      @id @default(autoincrement())
  shlId     String   @unique
  createdAt DateTime @default(now())

  // Relations
  shl   Shl            @relation(fields: [shlId], references: [id], onDelete: Cascade)
  files ManifestFile[]

  @@map("manifests")
}

model ManifestFile {
  id               Int      @id @default(autoincrement())
  manifestId       Int
  type             String   // SHLFileContentType: 'application/smart-health-card' | 'application/fhir+json'
  storagePath      String
  ciphertextLength Int
  lastUpdated      String?  // ISO 8601 datetime string
  createdAt        DateTime @default(now())

  // Relations
  manifest Manifest @relation(fields: [manifestId], references: [id], onDelete: Cascade)

  @@index([manifestId])
  @@map("manifest_files")
}

model Passcode {
  id             Int      @id @default(autoincrement())
  shlId          String   @unique
  hashedPasscode String
  failedAttempts Int      @default(0)
  isInvalidated  Boolean  @default(false)
  createdAt      DateTime @default(now())

  // Relations
  shl Shl @relation(fields: [shlId], references: [id], onDelete: Cascade)

  @@map("passcodes")
}

model Recipient {
  id         Int      @id @default(autoincrement())
  shlId      String
  recipient  String
  accessTime DateTime @default(now())

  // Relations
  shl Shl @relation(fields: [shlId], references: [id], onDelete: Cascade)

  @@index([shlId])
  @@map("recipients")
}
